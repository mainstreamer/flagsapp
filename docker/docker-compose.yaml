version: "3.6"
services:
  php:
    container_name: "php-flags-api"
    environment:
      APP_ENV: "dev"
#      XDEBUG_CONFIG: "remote_host=host.docker.internal"
#      PHP_IDE_CONFIG: "serverName=Docker"
#      DB_NAME: ${DB_NAME_DOCKER}
#      DB_PASS: ${DB_PASS}
#      DB_USER: ${DB_USER_DEV}
#      DB_HOST: ${DB_HOST_DOCKER}
#      DB_HOST_DOCKER: ${DB_HOST_DOCKER}
#      DB_PORT: ${DB_PORT_DOCKER}
#      DB_ROOT: ${DB_ROOT}
#      APP_SECRET: ${APP_SECRET}
      JWT_PASSPHRASE: ${JWT_PASSPHRASE}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_TOKEN_TTL: ${JWT_TOKEN_TTL}
      SYMFONY_DEPRECATIONS_HELPER: "disabled"
#      GENERIC_TEMPLATE_ID: ${GENERIC_TEMPLATE_ID}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN}
#      DO_SPACES_KEY: ${DO_SPACES_KEY}
#      DO_SPACES_SECRET: ${DO_SPACES_SECRET}
#      DO_SPACES_ENDPOINT: ${DO_SPACES_ENDPOINT}
#      DO_SPACES_REGION: ${DO_SPACES_REGION}
#      DO_SPACES_NAME: ${DO_SPACES_NAME}
#      DO_SPACES_DOWNLOAD_URL: ${DO_SPACES_DOWNLOAD_URL}
#      FILE_UPLOAD_DIR: ${FILE_UPLOAD_DIR}
      KERNEL_CLASS: ${KERNEL_CLASS}
#      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY_TEST}
    #    env_file: .env
    build:
      context: .
      dockerfile: .docker/php-fpm/Dockerfile
#      dockerfile: .docker/php-fpm/Dockerfile-xdebug
#    volumes:
#      - .:/var/www/webapp:rw,cached
    
#      - ${PROJECT_NAME}-codesync:/var/www/webapp:nocopy
#      - uploads:/var/www/webapp/uploads:rw,cached
    depends_on:
      - nginx
      - db
    networks:
      - backend
  db:
    build:
      context: .
      dockerfile: .docker/mysql57/Dockerfile
    container_name: "db-flags-api"
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "flags"
      MYSQL_USER: "dbuser"
      MYSQL_PASSWORD: "root"
    volumes:
      - db-data:/var/lib/mysql
    restart: always
    networks:
      - backend
    ports:
      - "3306:3306"
    expose:
      - 3306
  nginx:
    container_name: "nginx-flags-api"
#    container_name: "nginx-${PROJECT_NAME}"
    build:
      context: .
      dockerfile: .docker/nginx/Dockerfile
#    volumes:
##      - ${PROJECT_NAME}-codesync:/var/www/webapp:nocopy
#      - ${PROJECT_NAME}-volume:/var/www/webapp:delegated
    expose:
      - 80
    ports:
      - "80:80"
      - "443:443"
    restart: always
    networks:
      - backend
networks:
   backend:
volumes:
  db-data: ~
#  base-volume: ~
  
#    external: true
